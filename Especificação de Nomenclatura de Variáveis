Especifica√ß√£o de Nomenclatura de Vari√°veis

Neste texto, abordaremos uma especifica√ß√£o de nomenclatura de vari√°veis para LSL (Linden Script Language), utilizada para anexar comportamento a objetos.

Para come√ßar, precisamos falar sobre os tipos de vari√°veis, que s√£o: integer, float, string, key, list, vector e rotation.

Esses tipos s√£o utilizados na atribui√ß√£o de valores no LSL. Para evitar erros de "type mismatch" (tipo incompat√≠vel), seria interessante incluir o tipo no nome da vari√°vel. Outra pr√°tica recomend√°vel na nomenclatura de vari√°veis √© o uso do "camel case", onde a primeira letra do nome √© min√∫scula, mas os demais nomes contidos na vari√°vel iniciam com letra mai√∫scula. Vamos exemplificar com um c√≥digo "hello avatar" que, ao ser tocado, diz o nome de quem o tocou:

lsl

default
{
	state_entry()
	{
		llSay(0, "Hello, avatar!");
	}

	touch_start(integer total_num)
	{
		llSay(0, "Touched!");
		key chave = llDetectedKey(0);
		llSay(0, "Fui tocado por " + llKey2Name(chave));
		// Na linha acima, poderia ter usado llDetectedName(0), mas, por quest√µes did√°ticas, usei o llDetectedKey(0).
	}
}

Este c√≥digo, considerando que o tipo pertence ao nome, seria:

lsl

default
{
	state_entry()
	{
		llSay(0, "Hello, avatar!");
	}

	touch_start(integer total_num)
	{
		llSay(0, "Touched!");
		key keyChave = llDetectedKey(0);
		llSay(0, "Fui tocado por " + llKey2Name(keyChave));
		// Na linha acima, poderia ter usado llDetectedName(0), mas, por quest√µes did√°ticas, usei o llDetectedKey(0).
	}
}

Outro ponto importante √© o escopo, que pode ser global ou privado. As vari√°veis globais s√£o declaradas no topo do c√≥digo, enquanto as privadas s√£o vis√≠veis apenas pelo bloco de c√≥digo em que foram declaradas. Para efeitos de organiza√ß√£o, as vari√°veis globais come√ßam com a letra min√∫scula "g" e as privadas, com "p". Vejamos como ficaria nosso exemplo:

lsl

default
{
	state_entry()
	{
		llSay(0, "Hello, avatar!");
	}

	touch_start(integer total_num)
	{
		llSay(0, "Touched!");
		key pKeyChave = llDetectedKey(0);
		llSay(0, "Fui tocado por " + llKey2Name(pKeyChave));
		// Observe que, para efeitos de escopo, pKeyChave existe somente durante a execu√ß√£o do bloco do evento touch_start. Ap√≥s o t√©rmino do bloco, ela deixa de existir. Caso seja necess√°rio usar o valor em outros blocos, pKeyChave deveria ser declarada no topo, e seu valor consome mem√≥ria enquanto o script estiver rodando.
	}
}

Ainda existe um outro caso para vari√°veis privadas, que seriam blocos dentro de blocos. Nesses casos, usamos "pp", conforme o exemplo a seguir:

lsl

key gKeyChave;	

default
{
	state_entry()
	{
		llSay(0, "Hello, avatar!");
	}

	touch_start(integer total_num)
	{
		llSay(0, "Touched!");
		gKeyChave = llDetectedKey(0);
		
		integer pIntegerID;
		for(pIntegerID = 0; pIntegerID < total_num; pIntegerID++)
		{
			integer ppIntegerForID = pIntegerID;
			llSay(0, "Fui tocado por " + llKey2Name(gKeyChave) + " e ele tem ID = " + (string)ppIntegerForID);
			// Se ppIntegerForID for usado fora do bloco, ocorrer√° um erro, pois ele n√£o existe mais nesta parte do c√≥digo.
		}
	}
}

A √∫ltima considera√ß√£o sobre a nomenclatura de vari√°veis se refere a par√¢metros passados para dentro do c√≥digo por disparo de eventos. Essas vari√°veis recebem a letra "e" ao serem declaradas em eventos.

key gKeyChave;	

default
{

	state_entry()
	{
	
		llSay(0,"Hello, avatar!");
	
	}
	
	touch_start(integer eIntegerTotal)
	{
	
	
		llSay(0,"Touched1");
		
		gKeyChave = llDetectedKey(0);
		
		integer pIntegerID;
		for( pIntegerID = 0; pIntegerID < eIntegerTotal; pIntegerID++)
		{
		
			integer ppIntegerForID = pIntegerID;
			llSay(0,"Fui tocado por " + llKey2Name(gKeyChave) + " e ele tem ID = " + (string)ppIntegerForID);
		
		}
		
		//Vari√°veis "e" somente existem durante a execu√ß√£o do evento
	}

}

Essas s√£o as regras que uso na especifica√ß√£o de nomenclatura de vari√°veis. Claro, existem outras considera√ß√µes que n√£o cabem aqui, como, ao declarar o tipo, usar na nomenclatura apenas 3 letras (ex.: eIntTotal). Recomenda-se sempre nomear as vari√°veis em ingl√™s... √© mais estiloso! üòÑ

Este √© um resumo do resumo de minha especifica√ß√£o de nomenclatura de vari√°veis. Conforme for atualizada com mais informa√ß√µes, ser√° publicada.

Abra√ßo,
Augustus
